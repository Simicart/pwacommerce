<script>
    var base_url = "<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB, true ); ?>"
</script>
<?php if ($this->helper('simipwa')->IsEnableForWebsite()) : ?>
    <script>
        if ('serviceWorker' in navigator && 'PushManager' in window) {
            console.log('Service Worker and Push is supported');
            var sw = base_url + "simipwa-sw.js";
            navigator.serviceWorker.register(sw)
                .then(function (swReg) {
                    console.log('Service Worker is registered', '');
                    swRegistration = swReg;
                    initializeUI();
                    if (navigator.onLine) {
                        swRegistration.update();
                    }
                    swRegistration.onupdatefound = function () {
                        var installingWorker = swRegistration.installing;
                        installingWorker.onstatechange = function () {
                            if (installingWorker.state === 'installed') {
                                if (navigator.serviceWorker.controller) {
                                    swRegistration.update();
                                } else {
                                    console.log('Content is cached for offline use.');
                                }
                            }
                        };
                    };

                })
                .catch(function (error) {
                    console.error('Service Worker Error', error);
                });
        } else {
            console.warn('Push messaging is not supported');
            console.log('Push Not Supported');
        }
    </script>
<?php else: ?>
    <script type="text/javascript">
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.getRegistrations().then(function (registrations) {
                for (var sw of registrations) {
                    if (sw.active.scriptURL.indexOf('/simipwa-sw.js') > -1) {
                        console.log('Simi Service Worker has been deleted');
                        sw.unregister();
                    }
                }
            })
        }
    </script>
<?php endif; ?>
<?php if ($this->helper('simipwa')->IsEnableAddToHomescreen()): ?>
    <script type="text/javascript">
        if (!document.getElementById('simi-homescreen-manifest')) {
            var link = document.createElement('link');
            link.id = 'simi-homescreen-manifest';
            link.rel = 'manifest';
            link.href = '/simi-manifest.json';
            document.head.appendChild(link);
            var meta = [
                {
                    name: 'theme-color',
                    content: "#<?php echo Mage::getStoreConfig('simipwa/manifest/theme_color'); ?>"
                },
                {
                    name: 'mobile-web-app-capable',
                    content: 'yes'
                },
                {
                    name: 'apple-mobile-web-app-capable',
                    content: 'yes'
                },
                {
                    name: 'apple-mobile-web-app-title',
                    content: document.title
                },
            ]
            var app_icon = "<?php echo Mage::getStoreConfig('simipwa/manifest/logo'); ?>"
            var linkImg = [
                {
                    rel: 'apple-touch-icon',
                    type: 'image/png',
                    sizes: '512x512',
                    href: app_icon
                },
                {
                    rel: 'apple-touch-startup-image',
                    type: false,
                    sizes: false,
                    href: app_icon
                },

            ]
            for (var i = 0; i < meta.length; i++) {
                var item = meta[i]
                var el = document.createElement('meta');
                el.name = item.name;
                el.content = item.content
                document.head.appendChild(el)
            }
            for (var i = 0; i < linkImg.length; i++) {
                var item = linkImg[i]
                var el = document.createElement('link');
                el.rel = item.rel;
                if (item.type) el.type = item.type;
                if (item.sizes) el.sizes = item.sizes;
                el.href = item.href;
                document.head.appendChild(el)
            }
        }
    </script>
<?php endif ?>
<?php if ($this->helper('simipwa')->isShowBtnWebsite()) : ?>
    <?php
    $btn_text = $this->helper('simipwa')->getConfigSwitchVersion('btn_text');
    $text_color = $this->helper('simipwa')->getConfigSwitchVersion('btn_text_color');
    $bg_color = $this->helper('simipwa')->getConfigSwitchVersion('btn_background_color');
    $btn_css = "
        background : #$bg_color;
        color : #$text_color;
        
    ";
    $btn_css .= $this->helper('simipwa')->getConfigSwitchVersion('btn_css');
    ?>
    <div class="btn-switch" style="<?php echo $btn_css; ?>" onclick="trackBacktoPwa()">
        <?php echo $btn_text; ?>
    </div>
    <script type="text/javascript">
        document.getElementsByTagName('body')[0].classList.add('simi-pwa')
    </script>
<?php endif; ?>
